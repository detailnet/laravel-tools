name: Tests
on:
  pull_request:
    types:
      - opened
      - synchronize
    paths-ignore:
      - build/**
      - .gitattributes
      - .gitignore
      - docker-compose.yml
      - LICENSE
      - README.md
  push:
    branches:
      - 'main'
    paths-ignore:
      - build/**
      - .gitattributes
      - .gitignore
      - docker-compose.yml
      - LICENSE
      - README.md
jobs:
  code-check:
    name: Check coding standard
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php:
          - '8.2'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: curl,mbstring,xdebug
          tools: composer
          coverage: xdebug
      - name: Show PHP version
        run: php -v && composer -V
      - name: Show Docker version
        run: if [[ "$DEBUG" == "true" ]]; then docker version && env; fi
        env:
          DEBUG: ${{secrets.DEBUG}}
      - name: Download Composer cache dependencies from cache
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache Composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ matrix.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ matrix.os }}-composer-
      - name: Install dependencies
        run: |
          composer install --no-interaction
      - name: Run PHP_CodeSniffer
        run: |
          composer cs-check
      - name: Run PHPStan
        run: |
          composer stan-check-ci
  test:
    name: Test on PHP v${{ matrix.php }} with Mongo v${{ matrix.mongodb }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        include:
          - { os: ubuntu-latest, php: '8.2', mongodb: '4.4', experimental: false }
          - { os: ubuntu-latest, php: '8.2', mongodb: '5.0', experimental: false }
          - { os: ubuntu-latest, php: '8.2', mongodb: '6.0', experimental: false }
    services:
      mongo:
        image: mongo:${{ matrix.mongodb }}
        ports:
          - 27017:27017
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: curl,mbstring,xdebug
          coverage: xdebug
          tools: composer
      - name: Show PHP version
        run: php -v && composer -V
      - name: Show Docker version
        run: if [[ "$DEBUG" == "true" ]]; then docker version && env; fi
        env:
          DEBUG: ${{secrets.DEBUG}}
      - name: Download Composer cache dependencies from cache
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache Composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ matrix.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ matrix.os }}-composer-
      - name: Install dependencies
        run: |
          composer install --no-interaction
      - name: Run tests
        env:
          MONGO_HOST: 0.0.0.0
        run: |
          composer test
